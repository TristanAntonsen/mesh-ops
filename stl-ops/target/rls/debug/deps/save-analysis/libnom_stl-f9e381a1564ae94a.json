{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2","program":"/Users/tristanantonsen/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","nom_stl","--edition=2018","/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=f9e381a1564ae94a","-C","extra-filename=-f9e381a1564ae94a","--out-dir","/Users/tristanantonsen/Desktop/Projects/mesh-ops/stl-ops/target/rls/debug/deps","-L","dependency=/Users/tristanantonsen/Desktop/Projects/mesh-ops/stl-ops/target/rls/debug/deps","--extern","nom=/Users/tristanantonsen/Desktop/Projects/mesh-ops/stl-ops/target/rls/debug/deps/libnom-dc7f2c22988b553e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/tristanantonsen/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/tristanantonsen/Desktop/Projects/mesh-ops/stl-ops/target/rls/debug/deps/libnom_stl-f9e381a1564ae94a.rmeta"},"prelude":{"crate_id":{"name":"nom_stl","disambiguator":[7562093559733824250,0]},"crate_root":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src","external_crates":[{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17588522495838200792,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8278583129772197859,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14913712660212466740,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[169217235897429410,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3895911861305942990,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9813622304494305451,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12767531755122486811,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11042621516499360545,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[12900059087317885891,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2276627185568532740,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6031887558045411683,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726102652612607821,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[14945886052262342754,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[329292103076465253,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[471687133851620970,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[605306301665063266,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11032979542905123237,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[18407608818322377071,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[7683813092153219624,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":20,"id":{"name":"nom","disambiguator":[1333725764262028244,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":21,"id":{"name":"memchr","disambiguator":[7139084623826909970,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":22,"id":{"name":"lexical_core","disambiguator":[11170611418397657645,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":23,"id":{"name":"cfg_if","disambiguator":[7879366453308980228,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":24,"id":{"name":"arrayvec","disambiguator":[16739633799657561776,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":25,"id":{"name":"static_assertions","disambiguator":[18196514925109496739,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":26,"id":{"name":"ryu","disambiguator":[7921103640808690109,0]}},{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","num":27,"id":{"name":"bitflags","disambiguator":[723118973762805747,0]}}],"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":0,"byte_end":27675,"line_start":1,"line_end":893,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":0,"byte_end":27675,"line_start":1,"line_end":893,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":149},{"krate":0,"index":156},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":77},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":84},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":104},{"krate":0,"index":108},{"krate":0,"index":115},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":182},{"krate":0,"index":188},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"decl_id":null,"docs":" An parser for binary and ASCII STL files.","sig":null,"attributes":[{"value":"/ An parser for binary and ASCII STL files.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":0,"byte_end":45,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":46,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":50,"byte_end":64,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/ ```rust","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":65,"byte_end":76,"line_start":4,"line_end":4,"column_start":1,"column_end":12}},{"value":"/ use std::io::BufReader;","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":77,"byte_end":104,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":105,"byte_end":127,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"/ let file = File::open(\"./fixtures/Root_Vase.stl\").unwrap();","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":128,"byte_end":191,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ let mut root_vase = BufReader::new(&file);","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":192,"byte_end":238,"line_start":8,"line_end":8,"column_start":1,"column_end":47}},{"value":"/ let mesh: nom_stl::Mesh = nom_stl::parse_stl(&mut root_vase).unwrap();","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":239,"byte_end":313,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(mesh.triangles().len(), 596_736);","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":314,"byte_end":362,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":363,"byte_end":370,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":372,"byte_end":395,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":396,"byte_end":418,"line_start":14,"line_end":14,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":150},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1140,"byte_end":1147,"line_start":38,"line_end":38,"column_start":5,"column_end":12},"name":"IOError","qualname":"::Error::IOError","value":"Error::IOError(std::io::Error)","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":" A wrapper for a std::io::Error\n","sig":null,"attributes":[{"value":"/ A wrapper for a std::io::Error","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1101,"byte_end":1135,"line_start":37,"line_end":37,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":153},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1217,"byte_end":1227,"line_start":40,"line_end":40,"column_start":5,"column_end":15},"name":"ParseError","qualname":"::Error::ParseError","value":"Error::ParseError(String)","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":" Expressing the underlying nom_stl error\n","sig":null,"attributes":[{"value":"/ Expressing the underlying nom_stl error","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1169,"byte_end":1212,"line_start":39,"line_end":39,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":149},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1089,"byte_end":1094,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error { IOError(std::io::Error), ParseError(String), }","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":153}],"decl_id":null,"docs":" An error is either an IOError (wrapping std::io::Error),\n or a parse error, indicating that the parser is unable to\n make progress on an invalid input. This error is derived\n from the underlying nom_stl error\n","sig":null,"attributes":[{"value":"/ An error is either an IOError (wrapping std::io::Error),","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":841,"byte_end":901,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/ or a parse error, indicating that the parser is unable to","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":902,"byte_end":963,"line_start":32,"line_end":32,"column_start":1,"column_end":62}},{"value":"/ make progress on an invalid input. This error is derived","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":964,"byte_end":1024,"line_start":33,"line_end":33,"column_start":1,"column_end":61}},{"value":"/ from the underlying nom_stl error","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1025,"byte_end":1062,"line_start":34,"line_end":34,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":158},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1931,"byte_end":1939,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"Triangle","qualname":"::Triangle","value":"Triangle {  }","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"decl_id":null,"docs":" A triangle type with an included normal vertex and vertices.\n","sig":null,"attributes":[{"value":"/ A triangle type with an included normal vertex and vertices.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1814,"byte_end":1878,"line_start":68,"line_end":68,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2050,"byte_end":2053,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<Triangle>::new","value":"pub fn new(Vertex, [Vertex; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new triangle.\n","sig":null,"attributes":[{"value":"/ Create a new triangle.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2012,"byte_end":2038,"line_start":76,"line_end":76,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2261,"byte_end":2267,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"normal","qualname":"<Triangle>::normal","value":"pub fn normal(&Self) -> Vertex","parent":null,"children":[],"decl_id":null,"docs":" Return the normal vertex of the triangle.\n This indicates the \"front\" of the triangle.\n","sig":null,"attributes":[{"value":"/ Return the normal vertex of the triangle.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2152,"byte_end":2197,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/ This indicates the \"front\" of the triangle.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2202,"byte_end":2249,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2383,"byte_end":2391,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"vertices","qualname":"<Triangle>::vertices","value":"pub fn vertices(&Self) -> [Vertex; ]","parent":null,"children":[],"decl_id":null,"docs":" Return an array of the triangle's corner vertices\n","sig":null,"attributes":[{"value":"/ Return an array of the triangle's corner vertices","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2318,"byte_end":2371,"line_start":87,"line_end":87,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2510,"byte_end":2517,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"size_of","qualname":"<Triangle>::size_of","value":"pub fn size_of(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The size of the `Triangle` struct at runtime.\n","sig":null,"attributes":[{"value":"/ The size of the `Triangle` struct at runtime.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2449,"byte_end":2498,"line_start":92,"line_end":92,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2686,"byte_end":2690,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"Mesh","qualname":"::Mesh","value":"Mesh {  }","parent":null,"children":[{"krate":0,"index":173}],"decl_id":null,"docs":" A triangle mesh represented as a vector of `Triangle`.\n","sig":null,"attributes":[{"value":"/ A triangle mesh represented as a vector of `Triangle`.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2581,"byte_end":2639,"line_start":98,"line_end":98,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2808,"byte_end":2811,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<Mesh>::new","value":"pub fn new(Vec<Triangle>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a triangle mesh from a `Vec` of `Triangle`.\n","sig":null,"attributes":[{"value":"/ Create a triangle mesh from a `Vec` of `Triangle`.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2742,"byte_end":2796,"line_start":105,"line_end":105,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2940,"byte_end":2949,"line_start":111,"line_end":111,"column_start":12,"column_end":21},"name":"triangles","qualname":"<Mesh>::triangles","value":"pub fn triangles(&Self) -> &[Triangle]","parent":null,"children":[],"decl_id":null,"docs":" Return a slice of the mesh's triangles\n","sig":null,"attributes":[{"value":"/ Return a slice of the mesh's triangles","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2886,"byte_end":2928,"line_start":110,"line_end":110,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":3173,"byte_end":3181,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"vertices","qualname":"<Mesh>::vertices","value":"pub fn vertices(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the an iterator of vertices of all triangles.\n This function clones/copies every vertex, and does not deduplicate vertices.\n","sig":null,"attributes":[{"value":"/ Returns the an iterator of vertices of all triangles.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":3019,"byte_end":3076,"line_start":115,"line_end":115,"column_start":5,"column_end":62}},{"value":"/ This function clones/copies every vertex, and does not deduplicate vertices.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":3081,"byte_end":3161,"line_start":116,"line_end":116,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":3394,"byte_end":3406,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"vertices_ref","qualname":"<Mesh>::vertices_ref","value":"pub fn vertices_ref(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of vertex references for all triangles.\n Does not deduplicate any vertices.\n","sig":null,"attributes":[{"value":"/ Returns an iterator of vertex references for all triangles.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":3276,"byte_end":3339,"line_start":121,"line_end":121,"column_start":5,"column_end":68}},{"value":"/ Does not deduplicate any vertices.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":3344,"byte_end":3382,"line_start":122,"line_end":122,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":3687,"byte_end":3702,"line_start":131,"line_end":131,"column_start":12,"column_end":27},"name":"unique_vertices","qualname":"<Mesh>::unique_vertices","value":"pub fn unique_vertices(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of all unique vertices in the mesh.\n This function clones/copies every vertex.\n","sig":null,"attributes":[{"value":"/ Returns an iterator of all unique vertices in the mesh.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":3566,"byte_end":3625,"line_start":129,"line_end":129,"column_start":5,"column_end":64}},{"value":"/ This function clones/copies every vertex.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":3630,"byte_end":3675,"line_start":130,"line_end":130,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":4216,"byte_end":4223,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"size_of","qualname":"<Mesh>::size_of","value":"pub fn size_of(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The size of the `Mesh` struct at runtime.\n","sig":null,"attributes":[{"value":"/ The size of the `Mesh` struct at runtime.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":4159,"byte_end":4204,"line_start":147,"line_end":147,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":97},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":4391,"byte_end":4400,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"IndexMesh","qualname":"::IndexMesh","value":"IndexMesh {  }","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"decl_id":null,"docs":" A triangle mesh represented as a vector of `IndexTriangle`\n and a vector of `Vertex`.\n","sig":null,"attributes":[{"value":"/ A triangle mesh represented as a vector of `IndexTriangle`","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":4287,"byte_end":4349,"line_start":153,"line_end":153,"column_start":1,"column_end":63}},{"value":"/ and a vector of `Vertex`.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":4350,"byte_end":4379,"line_start":154,"line_end":154,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":4556,"byte_end":4565,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"triangles","qualname":"<IndexMesh>::triangles","value":"pub fn triangles(&Self) -> &[IndexTriangle]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of all `IndexTriangle` in the mesh.\n","sig":null,"attributes":[{"value":"/ Returns a slice of all `IndexTriangle` in the mesh.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":4489,"byte_end":4544,"line_start":161,"line_end":161,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":4700,"byte_end":4708,"line_start":167,"line_end":167,"column_start":12,"column_end":20},"name":"vertices","qualname":"<IndexMesh>::vertices","value":"pub fn vertices(&Self) -> &[Vertex]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of all vertices in the mesh.\n","sig":null,"attributes":[{"value":"/ Returns a slice of all vertices in the mesh.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":4640,"byte_end":4688,"line_start":166,"line_end":166,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":4827,"byte_end":4834,"line_start":172,"line_end":172,"column_start":12,"column_end":19},"name":"size_of","qualname":"<IndexMesh>::size_of","value":"pub fn size_of(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The size of the `IndexMesh` struct at runtime.\n","sig":null,"attributes":[{"value":"/ The size of the `IndexMesh` struct at runtime.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":4765,"byte_end":4815,"line_start":171,"line_end":171,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":104},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5062,"byte_end":5075,"line_start":180,"line_end":180,"column_start":12,"column_end":25},"name":"IndexTriangle","qualname":"::IndexTriangle","value":"IndexTriangle {  }","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"decl_id":null,"docs":" A triangle type which contains a normal vertex and index references\n to vertices contained in a separate vertices container.\n See `IndexMesh`.\n","sig":null,"attributes":[{"value":"/ A triangle type which contains a normal vertex and index references","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":4898,"byte_end":4969,"line_start":177,"line_end":177,"column_start":1,"column_end":72}},{"value":"/ to vertices contained in a separate vertices container.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":4970,"byte_end":5029,"line_start":178,"line_end":178,"column_start":1,"column_end":60}},{"value":"/ See `IndexMesh`.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5030,"byte_end":5050,"line_start":179,"line_end":179,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5194,"byte_end":5200,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"normal","qualname":"<IndexTriangle>::normal","value":"pub fn normal(&Self) -> Vertex","parent":null,"children":[],"decl_id":null,"docs":" The normal vector.\n","sig":null,"attributes":[{"value":"/ The normal vector.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5160,"byte_end":5182,"line_start":186,"line_end":186,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5369,"byte_end":5377,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"vertices","qualname":"<IndexTriangle>::vertices","value":"pub fn vertices(&Self, &[Vertex]) -> [Vertex; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the vertices for the `IndexTriangle` by looking them up\n in the given `vertices` slice.\n","sig":null,"attributes":[{"value":"/ Returns the vertices for the `IndexTriangle` by looking them up","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5251,"byte_end":5318,"line_start":191,"line_end":191,"column_start":5,"column_end":72}},{"value":"/ in the given `vertices` slice.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5323,"byte_end":5357,"line_start":192,"line_end":192,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5708,"byte_end":5724,"line_start":203,"line_end":203,"column_start":12,"column_end":28},"name":"vertices_indices","qualname":"<IndexTriangle>::vertices_indices","value":"pub fn vertices_indices(&Self) -> [usize; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the positions of the triangle's 3 vertices\n in the separate vertices container.\n","sig":null,"attributes":[{"value":"/ Returns the positions of the triangle's 3 vertices","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5598,"byte_end":5652,"line_start":201,"line_end":201,"column_start":5,"column_end":59}},{"value":"/ in the separate vertices container.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5657,"byte_end":5696,"line_start":202,"line_end":202,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5848,"byte_end":5855,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"size_of","qualname":"<IndexTriangle>::size_of","value":"pub fn size_of(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The size of the `IndexTriangle` at runtime.\n","sig":null,"attributes":[{"value":"/ The size of the `IndexTriangle` at runtime.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5789,"byte_end":5836,"line_start":207,"line_end":207,"column_start":5,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":121},"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":7932,"byte_end":7941,"line_start":267,"line_end":267,"column_start":8,"column_end":17},"name":"parse_stl","qualname":"::parse_stl","value":"pub fn parse_stl<R: Read + Seek>(&mut R) -> Result<Mesh>","parent":null,"children":[],"decl_id":null,"docs":" Parse a binary or an ASCII stl.\n Binary stls ar not supposed to begin with the bytes `solid`,\n but unfortunately they sometimes do in the real world.\n For this reason, we use a simple regex heuristic to determine\n if the stl contains the bytes `facet normal`, which is a byte\n sequence specifically used in ASCII stls.\n If the file contains this sequence, we assume ASCII, otherwise\n binary. While a binary stl can in theory contain this sequence,\n the odds of this are low. This is a tradeoff to avoid something\n both more complicated and less performant.\n","sig":null,"attributes":[{"value":"/ Parse a binary or an ASCII stl.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":7337,"byte_end":7372,"line_start":257,"line_end":257,"column_start":1,"column_end":36}},{"value":"/ Binary stls ar not supposed to begin with the bytes `solid`,","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":7373,"byte_end":7437,"line_start":258,"line_end":258,"column_start":1,"column_end":65}},{"value":"/ but unfortunately they sometimes do in the real world.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":7438,"byte_end":7496,"line_start":259,"line_end":259,"column_start":1,"column_end":59}},{"value":"/ For this reason, we use a simple regex heuristic to determine","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":7497,"byte_end":7562,"line_start":260,"line_end":260,"column_start":1,"column_end":66}},{"value":"/ if the stl contains the bytes `facet normal`, which is a byte","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":7563,"byte_end":7628,"line_start":261,"line_end":261,"column_start":1,"column_end":66}},{"value":"/ sequence specifically used in ASCII stls.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":7629,"byte_end":7674,"line_start":262,"line_end":262,"column_start":1,"column_end":46}},{"value":"/ If the file contains this sequence, we assume ASCII, otherwise","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":7675,"byte_end":7741,"line_start":263,"line_end":263,"column_start":1,"column_end":67}},{"value":"/ binary. While a binary stl can in theory contain this sequence,","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":7742,"byte_end":7809,"line_start":264,"line_end":264,"column_start":1,"column_end":68}},{"value":"/ the odds of this are low. This is a tradeoff to avoid something","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":7810,"byte_end":7877,"line_start":265,"line_end":265,"column_start":1,"column_end":68}},{"value":"/ both more complicated and less performant.","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":7878,"byte_end":7924,"line_start":266,"line_end":266,"column_start":1,"column_end":47}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1267,"byte_end":1272,"line_start":43,"line_end":43,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1414,"byte_end":1419,"line_start":49,"line_end":49,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1568,"byte_end":1573,"line_start":56,"line_end":56,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1707,"byte_end":1712,"line_start":62,"line_end":62,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1997,"byte_end":2005,"line_start":75,"line_end":75,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2731,"byte_end":2735,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":4473,"byte_end":4482,"line_start":160,"line_end":160,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5140,"byte_end":5153,"line_start":185,"line_end":185,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5939,"byte_end":5948,"line_start":213,"line_end":213,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":10552,"byte_end":10565,"line_start":361,"line_end":361,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":10830,"byte_end":10843,"line_start":372,"line_end":372,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1267,"byte_end":1272,"line_start":43,"line_end":43,"column_start":28,"column_end":33},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":9694}},{"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1414,"byte_end":1419,"line_start":49,"line_end":49,"column_start":28,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":149},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1568,"byte_end":1573,"line_start":56,"line_end":56,"column_start":31,"column_end":36},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1707,"byte_end":1712,"line_start":62,"line_end":62,"column_start":48,"column_end":53},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":1997,"byte_end":2005,"line_start":75,"line_end":75,"column_start":6,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":2731,"byte_end":2735,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":4473,"byte_end":4482,"line_start":160,"line_end":160,"column_start":6,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5140,"byte_end":5153,"line_start":185,"line_end":185,"column_start":6,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":5939,"byte_end":5948,"line_start":213,"line_end":213,"column_start":21,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":97},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":10552,"byte_end":10565,"line_start":361,"line_end":361,"column_start":15,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tristanantonsen/.cargo/registry/src/github.com-1ecc6299db9ec823/nom_stl-0.2.2/src/lib.rs","byte_start":10830,"byte_end":10843,"line_start":372,"line_end":372,"column_start":28,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":182},"to":{"krate":2,"index":7985}}]}